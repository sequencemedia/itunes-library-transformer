"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.filterPlaylists=exports.filterAlbums=exports.filterCompilationAlbums=exports.isFolderPlaylist=exports.isHiddenPlaylist=exports.isExcludedPlaylist=exports.isIncludedTrack=exports.getFilePath=exports.getFileName=exports.getByPlaylistId=exports.sortAsNumber=exports.filterByName=exports.filterByParentId=exports.filterByPlaylistId=exports.filterByPlaylist=exports.normaliseForFilePath=exports.normalise=void 0;const normalise=s=>s.normalize('NFD').replace(/[\u0300-\u036f]/g,'');exports.normalise=normalise;const normaliseForFilePath=s=>normalise(s.replace(/\\|\[|\]|[%"*/:<>?|]/g,'_'));exports.normaliseForFilePath=normaliseForFilePath;const filterByPlaylist=p=>playlist=>playlist===p;exports.filterByPlaylist=filterByPlaylist;const filterByPlaylistId=id=>playlist=>playlist.get('Playlist Persistent ID')===id;exports.filterByPlaylistId=filterByPlaylistId;const filterByParentId=id=>playlist=>playlist.get('Parent Persistent ID')===id;exports.filterByParentId=filterByParentId;const filterByName=name=>{const s=normaliseForFilePath(name);return playlist=>normaliseForFilePath(playlist.get('Name'))===s;};exports.filterByName=filterByName;const sortAsNumber=(alpha,omega)=>alpha-omega;exports.sortAsNumber=sortAsNumber;const getByPlaylistId=(playlists,id)=>Array.from(playlists).find(filterByPlaylistId(id))||new Map();exports.getByPlaylistId=getByPlaylistId;const getFileName=(playlist,playlists)=>{const parentId=playlist.get('Parent Persistent ID');const name=playlist.get('Name');const array=Array.from(playlists).filter(filterByParentId(parentId)).filter(filterByName(name));return array.length>1?`${normaliseForFilePath(name)} (${array.findIndex(filterByPlaylist(playlist))+1})`:normaliseForFilePath(name);};exports.getFileName=getFileName;const getFilePath=(playlist,playlists)=>playlist.has('Parent Persistent ID')?`${getFilePath(getByPlaylistId(playlists,playlist.get('Parent Persistent ID')),playlists)}/${getFileName(playlist,playlists)}`:getFileName(playlist,playlists);exports.getFilePath=getFilePath;const isIncludedTrack=track=>track.has('Kind')&&track.get('Kind').toLowerCase().includes('audio');exports.isIncludedTrack=isIncludedTrack;const isExcludedPlaylist=playlist=>playlist.has('Distinguished Kind')||playlist.has('Smart Info');exports.isExcludedPlaylist=isExcludedPlaylist;const isHiddenPlaylist=playlist=>playlist.has('Visible')?!playlist.get('Visible'):false;exports.isHiddenPlaylist=isHiddenPlaylist;const isFolderPlaylist=playlist=>playlist.has('Folder')?!!playlist.get('Folder'):false;exports.isFolderPlaylist=isFolderPlaylist;const filterCompilationAlbums=track=>track.get('Track Type')==='File'&&isIncludedTrack(track)&&track.has('Compilation')===true&&track.get('Compilation')===true&&track.has('Album')&&!track.get('Podcast');exports.filterCompilationAlbums=filterCompilationAlbums;const filterAlbums=track=>track.get('Track Type')==='File'&&isIncludedTrack(track)&&(track.has('Compilation')===false||track.get('Compilation')===false)&&(track.has('Album Artist')||track.has('Artist'))&&track.has('Album')&&!track.get('Podcast');exports.filterAlbums=filterAlbums;const filterPlaylists=playlist=>!(isFolderPlaylist(playlist)||isHiddenPlaylist(playlist)||isExcludedPlaylist(playlist))&&playlist.has('Playlist Items');exports.filterPlaylists=filterPlaylists;